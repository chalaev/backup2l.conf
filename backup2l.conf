#  -*-coding: utf-8;-*-
FOR_VERSION=1.5

# you have to change the following line:
user=shalaev

# you have to change the following line:
GPG_KEY="email@chalaev.com"

VOLNAME=$user

# you might want to update the following line:
SRCLIST=(/root /etc/davfs2/secrets /etc/email-addresses /etc/motion/motion.conf /etc/cron.weekly /etc/cron.monthly /etc/gammu-smsdrc /etc/smsd.conf /etc/default/smstools /etc/aliases /etc/pam.d/vsftpd /etc/vsftpd.conf /etc/pam_pgsql_vsftpd.conf /etc/apcupsd/apccontrol /etc/apcupsd/apcupsd.conf /etc/pgbackrest.conf /usr/local/bin/ /etc/apt/sources.list /etc/apt/preferences.d /etc/backup2l.conf /etc/nginx /etc/dovecot /etc/exim4 /etc/mailname /etc/hosts  /etc/hostname /etc/fstab /etc/network/interfaces /home/$user /srv/mail /srv/www /etc/logrotate.d/nginx /etc/spamassassin/local.cf /usr/lib/dovecot/sieve)

# you might want to update the following line:
SKIPCOND=( ! \( \( -group keepOneYear  -mtime -365 \) -o \( -group keepTwoYears -mtime -730 \) -o \( -group keepTwoYears -mtime -1095 \) -o -group important  \) \( -group tmp -o -not -type f -o -name "*~" -o -name "*.abw.SAVED" -o -iname "*.ac3" -o -name "*.afm" -o -name "*.aux"  -o -name "*.idx*"  -o -name "*.ilg" -o -name "*.ind*" -o -iname "*.avi" -o -name "*.bak" -o -ipath "*/mail/*spam/*" -o -ipath "*/*batch*/*" -o -name "*.bbl" -o -name "*.blg" -o -iname "*.brf" -o -iname "*.bst" -o -name "*.bz2" -o -name "*.cache"  -o -name "*.chm" -o -name "*.cp" -o -name "*.cps"  -o -path "*/Downloads/*" -o -name "*.dat" -o -name "*.deb" -o -name "*.dvi" -o -name "*.dv"  -o -path "*/elib/*" -o -name "*.eps"  -o -name "*.fb2"  -o -name "*.fn" -o -name "*.fls" -o -iname "*.fdb_latexmk" -o -iname "*.img" -o -iname "*.qcow" -o -iname "*.iso" -o -name "*.gpg"  -path "*/gPodder/*" -o -name "*.gpx" -o -iname "*.iso.segments"  -o -iname "*.ky" -o -ipath "*/home/*/local*/*" -o -ipath "*/home/*/quicklisp/*" -o -iname "*.mjpeg" -o -iname "*.m"  -o -iname "*.md" -o -iname "*.mov" -o -iname "*.mpg" -o -iname "*.mkv" -o -iname "*.jpg" -o \( ! \( -path "*/рисунки/*" -o -path "*/www/*"  -o -path "*/programming/projects/*" \) \( -iname "*.gif" -o -iname "*.jpeg" -o -name "*.png" \) \) -o -name "*.log"  -o -iname "*.mp3" -o -iname "*.mp4" -o -iname "*.m2v" -o -path "*/Music/*" -o -iname "*.ogg" -o -ipath "*/*old*/*" -o -name "*.ogm" -o -name "*.out" -o -name "*.part" -o -name "*.pbm" -o -name "*.pdf" -o -name "*.pfb" -o -name "*.pg"  -o -name "*.pod" -o -name "*.pgm" -o -name "*.pnm" -o -name "*.ps" -o -iname "*.rar" -o -iname "*.raw" -o -name "*.gz" -o -name "*.sfd" -o -name "*.woff"  -o -name "*.tbz" -o -name "*.tgz" -o -name "*.tga"  -o -iname "*.tif" -o -iname "*.tiff" -o -iname "*tmp*" -o -name "*.toc" -o -name "*.tp" -o -iname "*.vob" -o -iname "*.vr" -o -iname "*.wav"  -o -name ".Xauthority" -o -name "*.xcf" -o -name "*.xml" -o -name "*.xz" -o -name "*.Z" -o -name "*.zip" -o -path "*/.*/*" -o -name random_seed -o -name .bash_history  -o -name .recently-used  -o -name .xsession-errors -o -ipath "*/Maps/*" -o -path " /srv/www/js/dl/*" -o -path "/mnt/*"  -o -path "*/.Private/*" -name "ECRYPTFS_FNEK_ENCRYPTED.*" -o -ipath "*/backup/*"  -o -path "*srv/www/*.wiki/*"  -o -ipath "*/*tmp*/*"  -o -path "*/_region_.prv/*"  -o -path "*/js-lib/*" -o -path "*/fonts/*" \) )

# you have to change the following line:
BACKUP_DIR="/mnt/another-local-disk/backup"

# you have to change the following line:
cloud_dir="/mnt/remote-directory"

MAX_LEVEL=3
# MAX_PER_LEVEL=8  ← means ~3 months between 2nd-level archives which is too much for me:
MAX_PER_LEVEL=7
MAX_FULL=5
GENERATIONS=1
CREATE_CHECK_FILE=1
TIME_ZONE=""

PRE_BACKUP (){ true
}

cloud_purge (){
local LV=${#1}
: $[LV-=1]
local LASTDIG=${1:LV:1}
local PREFIX=${1%?}
if [[ $LV == 0 ]]; then
   rm $cloud_dir/$VOLNAME.$1*.tar.gpg
else
   rm $cloud_dir/$VOLNAME.$PREFIX[$LASTDIG-9]*.tar.gpg
fi
}


POST_BACKUP (){
cd $BACKUP_DIR
chgrp backup $BACKUP_DIR/$VOLNAME.$1.*
mv $BACKUP_DIR/$VOLNAME.$1.tar.gpg $cloud_dir/
ln -s ${cloud_dir}/${VOLNAME}.$1.tar.gpg $BACKUP_DIR
shift
for f in $@; do cloud_purge $f; done
}

AUTORUN=0
SIZE_UNITS="M"    # set to "B", "K", "M" or "G" to obtain unified units in summary list
CREATE_DRIVER="DRIVER_TAR_GPG"
USER_DRIVER_LIST="DRIVER_TAR_GPG"  # uncomment to register the driver(s) below (optional)

DRIVER_TAR_GPG ()
{
    case $1 in
	-test)
            require_tools tar gpg
            echo "ok"
	    ;;
        -suffix)
            echo "tar.gpg"
	    ;;
        -create)        # Arguments: $2 = BID, $3 = archive file name, $4 = file list file
            tar -c -T $4 --no-recursion | su - $user -c "/usr/bin/gpg --homedir ~$user/.gnupg --batch --no-tty -q -r $GPG_KEY --encrypt -"  > $3
	    #            tar -c -T $4 --no-recursion | /usr/bin/gpg --batch --no-tty -q --passphrase-fd 3 3</etc/backup2l.pass -c -  > $3
	    ;;
        -toc)           # Arguments: $2 = BID, $3 = archive file name
            /usr/bin/gpg --batch --no-tty -q -d $3 2>/dev/null | tar t | sed 's#^#/#'
	    #            /usr/bin/gpg --batch --no-tty -q --passphrase-fd 3 3</etc/backup2l.pass -d $3 2>/dev/null | tar t | sed 's#^#/#'
	    ;;
        -extract)       # Arguments: $2 = BID, $3 = archive file name, $4 = file list file
            /usr/bin/gpg --batch --no-tty -q -d $3 2>/dev/null | tar -x --same-permission --same-owner -T $4 2>&1
	    #             /usr/bin/gpg --batch --no-tty -q --passphrase-fd 3 3</etc/backup2l.pass -d $3 2>/dev/null | tar -x --same-permission --same-owner -T $4 2>&1
            ;;
    esac
}
